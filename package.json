{
  "name": "desenvolvimento-web-2025",
  "version": "1.0.0",
  "description": "- Todos os dias, pessoas sofrem pelo atraso no agendamento de exames e consultas pelo SUS, onde algumas demoram dias, meses e até anos para serem agendadas. \r - Os sistemas são falhos e de dificil entendimento\r - Com um sistema interativo, e com profissionais treinados, estas filas poderiam ser diminuidas ou até mesmo zeradas! \r - Objetivo Inicial: Reduzir as filas do SUS, e facilitar o entendimento de profissionais da Saúde.\r ## 2) Atores e Decisores (quem usa / quem decide)\r - Atores: Funcionários da saúde e clinicas\r - Decisores/Apoiadores: Admins\r ## 3) Casos de uso (de forma simples) \r - Todos: [ações comuns, ex.: Logar/des  logar; Manter dados cadastrais]\r - Funcionario da saúde: Manter (inserir, mostrar, editar, remover) todos os agendamentos.\r - Clinica: Manter (inserir, editar, remover) todas as vagas.\r - Admin: Manter (inserir, editar, mostrar, remover) todas as vagas, agendamentos e usuários.\r ## 4) Limites e suposições\r - Limites: entrega final até o fim da disciplina (ex.: 2025-11-30); rodar no\r navegador; sem serviços pagos.\r - Suposições: internet no laboratório; navegador atualizado; acesso ao GitHub; 10\r min para teste rápido.\r - Plano B: sem internet → rodar local e salvar em arquivo/LocalStorage; sem tempo do\r professor → testar com 3 colegas. -->\r ## 5) Hipóteses + validação\r <!-- Preencha as duas frases abaixo. Simples e direto.\r  EXEMPLO Valor: Se o aluno ver sua posição na fila, sente mais controle e conclui\r melhor a atividade.\r  Validação: teste com 5 alunos; sucesso se ≥4 abrem/fecham chamado sem ajuda.\r  EXEMPLO Viabilidade: Com app no navegador (HTML/CSS/JS + armazenamento local),\r  criar e listar chamados responde em até 1 segundo na maioria das vezes (ex.: 9 de\r cada 10).\r  Validação: medir no protótipo com 30 ações; meta: pelo menos 27 de 30 ações (9/10)\r em 1s ou menos. -->\r H-Valor: Se [X], então [Y] melhora em [critério].\r Validação (valor): [teste rápido/observação]; alvo: [meta simples].\r H-Viabilidade: Com [tecnologia], [ação/tela] leva até [n] s.\r Validação (viabilidade): [medição no protótipo]; meta: [n] s ou menos na maioria das\r vezes (ex.: 9/10).\r ## 6) Fluxo principal e primeira fatia\r <!-- Pense “Entrada → Processo → Saída”.\r  EXEMPLO de Fluxo:\r  1) Aluno faz login\r  2) Clica em \"Pedir ajuda\" e descreve a dúvida\r  3) Sistema salva e coloca na fila\r  4) Lista mostra ordem e tempo desde criação\r  5) Professor encerra o chamado\r  EXEMPLO de 1ª fatia:\r  Inclui login simples, criar chamado, listar em ordem.\r  Critérios de aceite (objetivos): criar → aparece na lista com horário; encerrar →\r some ou marca \"fechado\". -->\r **Fluxo principal (curto):**\r 1) [entrada do usuário] → 2) [processo] → 3) [salvar algo] → 4) [mostrar resultado]\r **Primeira fatia vertical (escopo mínimo):**\r Inclui: [uma tela], [uma ação principal], [salvar], [mostrar algo]\r Critérios de aceite:\r - [Condição 1 bem objetiva]\r - [Condição 2 bem objetiva]\r ## 7) Esboços de algumas telas (wireframes)\r <!-- Vale desenho no papel (foto), Figma, Excalidraw, etc. Não precisa ser bonito,\r precisa ser claro.\r  EXEMPLO de telas:\r  • Login\r  • Lista de chamados (ordem + tempo desde criação)\r  • Novo chamado (formulário simples)\r  • Painel do professor (atender/encerrar)\r  EXEMPLO de imagem:\r  ![Wireframe - Lista de chamados](img/wf-lista-chamados.png) -->\r [Links ou imagens dos seus rascunhos de telas aqui]\r ## 8) Tecnologias\r <!-- Liste apenas o que você REALMENTE pretende usar agora. -->\r ### 8.1 Navegador\r **Navegador:** [HTML/CSS/JS | React/Vue/Bootstrap/etc., se houver]\r **Armazenamento local (se usar):** [LocalStorage/IndexedDB/—]\r **Hospedagem:** [GitHub Pages/—]\r ### 8.2 Front-end (servidor de aplicação, se existir)\r **Front-end (servidor):** [ex.: Next.js/React/—]\r **Hospedagem:** [ex.: Vercel/—]\r ### 8.3 Back-end (API/servidor, se existir)\r **Back-end (API):** [ex.: FastAPI/Express/PHP/Laravel/Spring/—]\r **Banco de dados:** [ex.: SQLite/Postgres/MySQL/MongoDB/—]\r **Deploy do back-end:** [ex.: Render/Railway/—]\r ## 9) Plano de Dados (Dia 0) — somente itens 1–3\r <!-- Defina só o essencial para criar o banco depois. -->\r ### 9.1 Entidades\r <!-- EXEMPLO:\r  - Usuario — pessoa que usa o sistema (aluno/professor)\r  - Chamado — pedido de ajuda criado por um usuário -->\r - [Entidade 1] — [o que representa em 1 linha]\r - [Entidade 2] — [...]\r - [Entidade 3] — [...]\r ### 9.2 Campos por entidade\r <!-- Use tipos simples: uuid, texto, número, data/hora, booleano, char. -->\r ### Usuario\r | Campo | Tipo | Obrigatório | Exemplo |\r |-----------------|-------------------------------|-------------|--------------------|\r | id | número | sim | 1 |\r | nome | texto | sim | \"Ana Souza\" |\r | email | texto | sim (único) | \"ana@exemplo.com\" |\r | senha_hash | texto | sim | \"$2a$10$...\" |\r | papel | número (0=aluno, 1=professor) | sim | 0 |\r | dataCriacao | data/hora | sim | 2025-08-20 14:30 |\r | dataAtualizacao | data/hora | sim | 2025-08-20 15:10 |\r ### Chamado\r | Campo | Tipo | Obrigatório | Exemplo |\r |-----------------|--------------------|-------------|-------------------------|\r | id | número | sim | 2 |\r | Usuario_id | número (fk) | sim | 8f3a-... |\r | texto | texto | sim | \"Erro ao compilar\" |\r | estado | char | sim | 'a' \\| 'f' |\r | dataCriacao | data/hora | sim | 2025-08-20 14:35 |\r | dataAtualizacao | data/hora | sim | 2025-08-20 14:50 |\r ### 9.3 Relações entre entidades\r <!-- Frases simples bastam. EXEMPLO:\r  Um Usuario tem muitos Chamados (1→N).\r  Um Chamado pertence a um Usuario (N→1). -->\r - Um [A] tem muitos [B]. (1→N)\r - Um [B] pertence a um [A]. (N→1)",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Murilodellajustina/desenvolvimento-web-2025.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/Murilodellajustina/desenvolvimento-web-2025.git/issues"
  },
  "homepage": "https://github.com/Murilodellajustina/desenvolvimento-web-2025.git#readme",
  "dependencies": {
    "express": "^5.1.0"
  }
}
